{"ast":null,"code":"var _jsxFileName = \"/Users/egormaksimov/Documents/PROGRAMMING/reactmessanger/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/globalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\nimport { useDarkMode } from \"./components/useDarkMode\";\nimport Toggle from './components/Toggler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [theme, setTheme] = useState('light');\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themeMode,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n        theme: theme,\n        toggleTheme: themeToggler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) // <div>\n  //   <Dashboard/>\n  // </div>\n  ;\n}\n\n_s(App, \"saMS7KGgBxrQmVrCefyFfk5oLwk=\", false, function () {\n  return [useDarkMode];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ThemeProvider","GlobalStyles","lightTheme","darkTheme","useDarkMode","Toggle","App","theme","themeToggler","themeMode"],"sources":["/Users/egormaksimov/Documents/PROGRAMMING/reactmessanger/client/src/App.tsx"],"sourcesContent":["import Dashboard from './components/Dashboard';\nimport {ThemeProvider} from \"styled-components\";\nimport { GlobalStyles } from \"./components/globalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\nimport { useState } from 'react';\nimport  {useDarkMode} from \"./components/useDarkMode\";\nimport Toggle from './components/Toggler';\n\n\nfunction App() {\n  // const [theme, setTheme] = useState('light');\n  const [theme, themeToggler] = useDarkMode();\n\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles/>\n        <Toggle theme={theme} toggleTheme={themeToggler}/>\n      </>\n    </ThemeProvider>\n    // <div>\n    //   <Dashboard/>\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,SAAQA,aAAR,QAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,qBAAtC;AAEA,SAASC,WAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,KAAD,EAAQC,YAAR,IAAwBJ,WAAW,EAAzC;EAEA,MAAMK,SAAS,GAAGF,KAAK,KAAK,OAAV,GAAoBL,UAApB,GAAiCC,SAAnD;EAGA,oBACE,QAAC,aAAD;IAAe,KAAK,EAAEM,SAAtB;IAAA,uBACE;MAAA,wBACE,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAQ,KAAK,EAAEF,KAAf;QAAsB,WAAW,EAAEC;MAAnC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF,CAOE;EACA;EACA;EATF;AAWD;;GAlBQF,G;UAEuBF,W;;;KAFvBE,G;AAoBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}