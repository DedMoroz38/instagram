{"ast":null,"code":"var _jsxFileName = \"/Users/egormaksimov/Documents/PROGRAMMING/reactmessanger/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./components/globalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: themeToggler,\n        children: \"Switch Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) // <div>\n  //   <Dashboard/>\n  // </div>\n  ;\n}\n\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ThemeProvider","GlobalStyles","lightTheme","darkTheme","useState","App","theme","setTheme","themeToggler"],"sources":["/Users/egormaksimov/Documents/PROGRAMMING/reactmessanger/client/src/App.tsx"],"sourcesContent":["import Dashboard from './components/Dashboard';\nimport {ThemeProvider} from \"styled-components\";\nimport { GlobalStyles } from \"./components/globalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\nimport { useState } from 'react';\n\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n  }\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles/>\n        <button onClick={themeToggler}>Switch Theme</button>\n      </>\n    </ThemeProvider>\n    // <div>\n    //   <Dashboard/>\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,SAAQA,aAAR,QAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,qBAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,OAAD,CAAlC;;EACA,MAAMI,YAAY,GAAG,MAAM;IACzBF,KAAK,KAAK,OAAV,GAAoBC,QAAQ,CAAC,MAAD,CAA5B,GAAuCA,QAAQ,CAAC,OAAD,CAA/C;EACD,CAFD;;EAIA,oBACE,QAAC,aAAD;IAAe,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBJ,UAApB,GAAiCC,SAAvD;IAAA,uBACE;MAAA,wBACE,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEK,YAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF,CAOE;EACA;EACA;EATF;AAWD;;GAjBQH,G;;KAAAA,G;AAmBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}